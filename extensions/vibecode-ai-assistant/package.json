{
  "name": "vibecode-ai-assistant",
  "displayName": "VibeCode AI Assistant",
  "description": "Multi-provider AI coding assistant with OpenRouter integration",
  "version": "1.0.0",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other",
    "AI",
    "Machine Learning"
  ],
  "keywords": [
    "ai",
    "assistant",
    "coding",
    "openai",
    "claude",
    "openrouter",
    "code-generation"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vibecode.generateCode",
        "title": "Generate Code with AI",
        "category": "VibeCode"
      },
      {
        "command": "vibecode.explainCode",
        "title": "Explain Code",
        "category": "VibeCode"
      },
      {
        "command": "vibecode.optimizeCode",
        "title": "Optimize Code",
        "category": "VibeCode"
      },
      {
        "command": "vibecode.fixCode",
        "title": "Fix Code Issues",
        "category": "VibeCode"
      },
      {
        "command": "vibecode.generateTests",
        "title": "Generate Tests",
        "category": "VibeCode"
      },
      {
        "command": "vibecode.generateProject",
        "title": "Generate Project from Description",
        "category": "VibeCode"
      },
      {
        "command": "vibecode.chatWithCode",
        "title": "Chat with AI about Code",
        "category": "VibeCode"
      },
      {
        "command": "vibecode.selectAIModel",
        "title": "Select AI Model",
        "category": "VibeCode"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "vibecode.generateCode",
          "when": "editorTextFocus",
          "group": "vibecode@1"
        },
        {
          "command": "vibecode.explainCode",
          "when": "editorHasSelection",
          "group": "vibecode@2"
        },
        {
          "command": "vibecode.optimizeCode",
          "when": "editorHasSelection",
          "group": "vibecode@3"
        },
        {
          "command": "vibecode.fixCode",
          "when": "editorHasSelection",
          "group": "vibecode@4"
        },
        {
          "command": "vibecode.generateTests",
          "when": "editorHasSelection",
          "group": "vibecode@5"
        }
      ],
      "commandPalette": [
        {
          "command": "vibecode.generateCode",
          "when": "editorTextFocus"
        },
        {
          "command": "vibecode.explainCode",
          "when": "editorHasSelection"
        },
        {
          "command": "vibecode.optimizeCode",
          "when": "editorHasSelection"
        },
        {
          "command": "vibecode.fixCode",
          "when": "editorHasSelection"
        },
        {
          "command": "vibecode.generateTests",
          "when": "editorHasSelection"
        },
        {
          "command": "vibecode.generateProject"
        },
        {
          "command": "vibecode.chatWithCode"
        },
        {
          "command": "vibecode.selectAIModel"
        }
      ]
    },
    "keybindings": [
      {
        "command": "vibecode.generateCode",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g",
        "when": "editorTextFocus"
      },
      {
        "command": "vibecode.explainCode",
        "key": "ctrl+shift+e",
        "mac": "cmd+shift+e",
        "when": "editorHasSelection"
      },
      {
        "command": "vibecode.chatWithCode",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "vibeCodeChat",
          "name": "VibeCode AI Chat",
          "when": "vibeCodeChatEnabled"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vibecode-ai",
          "title": "VibeCode AI",
          "icon": "$(robot)"
        }
      ]
    },
    "configuration": {
      "title": "VibeCode AI Assistant",
      "properties": {
        "vibecode.openRouterApiKey": {
          "type": "string",
          "default": "",
          "description": "OpenRouter API key for multi-provider AI access",
          "scope": "window"
        },
        "vibecode.defaultModel": {
          "type": "string",
          "default": "anthropic/claude-3-sonnet-20240229",
          "description": "Default AI model to use",
          "enum": [
            "anthropic/claude-3-sonnet-20240229",
            "anthropic/claude-3-haiku-20240307",
            "openai/gpt-4-turbo-preview",
            "openai/gpt-3.5-turbo",
            "google/gemini-pro",
            "mistral/mistral-large",
            "meta-llama/llama-3-70b-instruct"
          ],
          "scope": "window"
        },
        "vibecode.maxTokens": {
          "type": "number",
          "default": 4000,
          "description": "Maximum tokens for AI responses",
          "scope": "window"
        },
        "vibecode.temperature": {
          "type": "number",
          "default": 0.7,
          "description": "Temperature for AI responses (0.0-1.0)",
          "minimum": 0.0,
          "maximum": 1.0,
          "scope": "window"
        },
        "vibecode.enableTelemetry": {
          "type": "boolean",
          "default": false,
          "description": "Enable anonymous usage telemetry",
          "scope": "window"
        },
        "vibecode.enableStreaming": {
          "type": "boolean",
          "default": true,
          "description": "Enable streaming responses for faster feedback",
          "scope": "window"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.85.0",
    "@types/node": "^18.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.50.0",
    "typescript": "^5.0.0",
    "@vscode/test-electron": "^2.3.0",
    "@vscode/vsce": "^3.6.0"
  },
  "dependencies": {
    "axios": "^1.6.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vibecode/vibecode-webgui"
  },
  "author": {
    "name": "VibeCode Team",
    "email": "team@vibecode.dev"
  },
  "license": "MIT",
  "publisher": "vibecode"
}


services:
  # Main Next.js application
  web:
    build:
      context: .
      dockerfile: docker/development/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.docker
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
    networks:
      - vibecode-network
    restart: unless-stopped

  # Code-server IDE
  code-server:
    build:
      context: ./docker/code-server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PASSWORD=${CODE_SERVER_PASSWORD:-vibecode123}
      - DOCKER_USER=coder
    volumes:
      - ./:/home/coder/workspace
      - code-server-config:/home/coder/.local/share/code-server
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - vibecode-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # PostgreSQL database
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_DB=vibecode_dev
      - POSTGRES_USER=vibecode
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-vibecode123}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - vibecode-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vibecode -d vibecode_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - vibecode-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # WebSocket server for real-time features
  websocket:
    build:
      context: .
      dockerfile: docker/development/Dockerfile.websocket
    ports:
      - "3001:3001"
    env_file:
      - .env.docker
    environment:
      - NODE_ENV=development
    volumes:
      - ./server:/app/server
    depends_on:
      - redis
    networks:
      - vibecode-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  code-server-config:

networks:
  vibecode-network:
    driver: bridge

# LiteLLM Complete Integration Stack
# ===================================
# Production-ready LiteLLM setup with PostgreSQL, Redis, UI, and monitoring

networks:
  litellm-network:
    driver: bridge

volumes:
  litellm-postgres-data:
  litellm-redis-data:
  litellm-logs:

services:
  # PostgreSQL Database with pgvector
  litellm-postgres:
    image: postgres:15-alpine
    container_name: litellm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: litellm
      POSTGRES_PASSWORD: litellm_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - litellm-postgres-data:/var/lib/postgresql/data
      - ./litellm/init-litellm-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"
    networks:
      - litellm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U litellm -d litellm"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  litellm-redis:
    image: redis:7-alpine
    container_name: litellm-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - litellm-redis-data:/data
    ports:
      - "6380:6379"
    networks:
      - litellm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # LiteLLM Proxy Server
  litellm-proxy:
    image: ghcr.io/berriai/litellm:main-latest
    container_name: litellm-proxy
    restart: unless-stopped
    depends_on:
      litellm-postgres:
        condition: service_healthy
      litellm-redis:
        condition: service_healthy
    environment:
      # Database Configuration
      DATABASE_URL: "postgresql://litellm:litellm_password_2024@litellm-postgres:5432/litellm"
      
      # Redis Configuration
      REDIS_HOST: "litellm-redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: ""
      
      # API Configuration
      LITELLM_MASTER_KEY: "sk-vibecode-master-key-12345"
      LITELLM_SALT_KEY: "sk-vibecode-salt-2024-secure"
      UI_USERNAME: "admin"
      UI_PASSWORD: "vibecode2024"
      
      # Model API Keys (will be loaded from environment)
      OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
      ANTHROPIC_API_KEY: "${ANTHROPIC_API_KEY:-}"
      
      # General Configuration
      STORE_MODEL_IN_DB: "True"
      LITELLM_LOG: "INFO"
      LITELLM_REQUEST_TIMEOUT: "600"
      
      # Cost Tracking
      COST_TRACKING: "True"
      
      # Security
      LITELLM_DISABLE_DOCS: "False"
      
    volumes:
      - ./litellm/config.yaml:/app/config.yaml:ro
      - litellm-logs:/app/logs
    ports:
      - "4000:4000"
    networks:
      - litellm-network
    command: [
      "--config", "/app/config.yaml",
      "--port", "4000",
      "--num_workers", "1"
    ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health/liveliness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # LiteLLM UI
  litellm-ui:
    image: ghcr.io/berriai/litellm-database:main-latest
    container_name: litellm-ui
    restart: unless-stopped
    depends_on:
      litellm-proxy:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://litellm:litellm_password_2024@litellm-postgres:5432/litellm"
      LITELLM_MASTER_KEY: "sk-vibecode-master-key-12345"
      UI_USERNAME: "admin"
      UI_PASSWORD: "vibecode2024"
    ports:
      - "4001:4001"
    networks:
      - litellm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Datadog Agent (macOS compatible)
  litellm-datadog-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: litellm-datadog-agent
    restart: unless-stopped
    environment:
      DD_API_KEY: "${DD_API_KEY:-dummy_key_for_testing}"
      DD_SITE: "datadoghq.com"
      DD_HOSTNAME: "litellm-proxy"
      DD_TAGS: "env:production service:litellm"
      DD_LOGS_ENABLED: "true"
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: "true"
      DD_CONTAINER_EXCLUDE: "name:litellm-datadog-agent"
      DD_AC_EXCLUDE: "name:litellm-datadog-agent"
      # APM Configuration
      DD_APM_ENABLED: "true"
      DD_APM_NON_LOCAL_TRAFFIC: "true"
      # Process Monitoring
      DD_PROCESS_AGENT_ENABLED: "true"
      DD_SYSTEM_PROBE_ENABLED: "true"
    volumes:
      # macOS compatible volume mounts
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - ./monitoring/datadog/conf.d:/etc/datadog-agent/conf.d:ro
    ports:
      - "8126:8126"  # APM traces
      - "8125:8125/udp"  # DogStatsD
    networks:
      - litellm-network
    security_opt:
      - apparmor:unconfined
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
      - IPC_LOCK
      - CHOWN 
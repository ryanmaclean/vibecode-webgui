# Pre-commit hooks for security and license compliance
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
      - id: detect-private-key

  # License scanning
  - repo: local
    hooks:
      - id: license-check
        name: License Compatibility Check
        entry: ./scripts/check-licenses.sh
        language: script
        files: ^package\.json$
        stages: [pre-commit]

      - id: vulnerability-scan
        name: Vulnerability Scan
        entry: ./scripts/vulnerability-scan.sh
        language: script
        files: ^package\.json$
        stages: [pre-commit]

      - id: test-suite
        name: Run Test Suite
        entry: npm test
        language: system
        files: \.(js|jsx|ts|tsx)$
        stages: [pre-commit]


      - id: helm-lint
        name: Helm Chart Linting
        entry: helm lint helm/vibecode-platform
        language: system
        files: ^helm/.*\.(yaml|yml)$
        stages: [pre-commit]

      - id: helm-template-test
        name: Helm Template Validation
        entry: bash -c 'helm template vibecode-platform helm/vibecode-platform --namespace vibecode-platform | kubectl apply --dry-run=client -f - || true'
        language: system
        files: ^helm/.*\.(yaml|yml)$
        stages: [pre-commit]

      - id: k8s-tests
        name: Kubernetes Integration Tests
        entry: npm run test:k8s:quick
        language: system
        files: ^(tests/k8s/|helm/|k8s/|scripts/).*$
        stages: [pre-commit]

      - id: provisioning-script-test
        name: User Provisioning Script Test
        entry: bash -c 'scripts/provision-user.sh --help && echo "Provisioning script syntax OK"'
        language: system
        files: ^scripts/provision-user\.sh$
        stages: [pre-commit]

      - id: typescript-check
        name: TypeScript Type Check
        entry: npx tsc --noEmit
        language: node
        files: \.(ts|tsx)$
        stages: [pre-commit]

      - id: eslint
        name: ESLint
        entry: npx eslint --fix
        language: node
        types: [file]
        files: \.(js|jsx|ts|tsx)$
